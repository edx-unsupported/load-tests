<?xml version="1.0" encoding="UTF-8"?>
<jmeterTestPlan version="1.2" properties="2.4" jmeter="2.9 r1437961">
  <hashTree>
    <TestPlan guiclass="TestPlanGui" testclass="TestPlan" testname="Test Plan" enabled="true">
      <stringProp name="TestPlan.comments"></stringProp>
      <boolProp name="TestPlan.functional_mode">false</boolProp>
      <boolProp name="TestPlan.serialize_threadgroups">false</boolProp>
      <elementProp name="TestPlan.user_defined_variables" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
        <collectionProp name="Arguments.arguments"/>
      </elementProp>
      <stringProp name="TestPlan.user_define_classpath"></stringProp>
    </TestPlan>
    <hashTree>
      <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
        <collectionProp name="Arguments.arguments">
          <elementProp name="SERVER" elementType="Argument">
            <stringProp name="Argument.name">SERVER</stringProp>
            <stringProp name="Argument.value">localhost</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="URL" elementType="Argument">
            <stringProp name="Argument.name">URL</stringProp>
            <stringProp name="Argument.value">http://localhost:8000</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
        </collectionProp>
      </Arguments>
      <hashTree/>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="formula_problem_correct" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <longProp name="ThreadGroup.start_time">1374077103000</longProp>
        <longProp name="ThreadGroup.end_time">1374077103000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <CookieManager guiclass="CookiePanel" testclass="CookieManager" testname="HTTP Cookie Manager" enabled="true">
          <collectionProp name="CookieManager.cookies"/>
          <boolProp name="CookieManager.clearEachIteration">false</boolProp>
        </CookieManager>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Auth" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${SERVER}</stringProp>
          <stringProp name="HTTPSampler.port">8000</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/auto_auth</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="change_enrollment_subscribe" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="course_id" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">edx/001/Manual_Test_Course</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">course_id</stringProp>
              </elementProp>
              <elementProp name="enrollment_action" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">enroll</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">enrollment_action</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${SERVER}</stringProp>
          <stringProp name="HTTPSampler.port">8000</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/change_enrollment</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree/>
        <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">true</boolProp>
          <intProp name="LoopController.loops">-1</intProp>
        </LoopController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="event_problem_check" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="event_type" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">problem_check</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">event_type</stringProp>
                </elementProp>
                <elementProp name="event" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.value">input_i4x-edx-001-problem-39d331eb9b0a48bfbc8a1640bc2871b4_2_1=rho*omega%5E2*(L%5E2%2F2+%2BR*L)+&amp;input_i4x-edx-001-problem-39d331eb9b0a48bfbc8a1640bc2871b4_2_1_dynamath=%3Cmath+xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F1998%2FMath%2FMathML%22%3E%0D%0A++%3Cmstyle+displaystyle%3D%22true%22%3E%0D%0A++++%3Cmi%3E%26%23x3C1%3B%3C%2Fmi%3E%0D%0A++++%3Cmo%3E%26%23x22C5%3B%3C%2Fmo%3E%0D%0A++++%3Cmsup%3E%0D%0A++++++%3Cmi%3E%26%23x3C9%3B%3C%2Fmi%3E%0D%0A++++++%3Cmn%3E2%3C%2Fmn%3E%0D%0A++++%3C%2Fmsup%3E%0D%0A++++%3Cmo%3E%26%23x22C5%3B%3C%2Fmo%3E%0D%0A++++%3Cmrow%3E%0D%0A++++++%3Cmo%3E(%3C%2Fmo%3E%0D%0A++++++%3Cmfrac%3E%0D%0A++++++++%3Cmsup%3E%0D%0A++++++++++%3Cmi%3EL%3C%2Fmi%3E%0D%0A++++++++++%3Cmn%3E2%3C%2Fmn%3E%0D%0A++++++++%3C%2Fmsup%3E%0D%0A++++++++%3Cmn%3E2%3C%2Fmn%3E%0D%0A++++++%3C%2Fmfrac%3E%0D%0A++++++%3Cmo%3E%2B%3C%2Fmo%3E%0D%0A++++++%3Cmi%3ER%3C%2Fmi%3E%0D%0A++++++%3Cmo%3E%26%23x22C5%3B%3C%2Fmo%3E%0D%0A++++++%3Cmi%3EL%3C%2Fmi%3E%0D%0A++++++%3Cmo%3E)%3C%2Fmo%3E%0D%0A++++%3C%2Fmrow%3E%0D%0A++%3C%2Fmstyle%3E%0D%0A%3C%2Fmath%3E</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">event</stringProp>
                </elementProp>
                <elementProp name="page" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.value">${URL}/courses/edx/001/Manual_Test_Course/courseware/ca74c64d167c4926b9bb31eab4db430c/6d184c70c53a4ae1acb4315d897af7cf/</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">page</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${SERVER}</stringProp>
            <stringProp name="HTTPSampler.port">8000</stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/event</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="formula_problem_correct" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="input_i4x-edx-001-problem-39d331eb9b0a48bfbc8a1640bc2871b4_2_1_dynamath" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.value">&lt;math xmlns=&quot;http://www.w3.org/1998/Math/MathML&quot;&gt;   &lt;mstyle displaystyle=&quot;true&quot;&gt;     &lt;mi&gt;&amp;#x3C1;&lt;/mi&gt;     &lt;mo&gt;&amp;#x22C5;&lt;/mo&gt;     &lt;msup&gt;       &lt;mi&gt;&amp;#x3C9;&lt;/mi&gt;       &lt;mn&gt;2&lt;/mn&gt;     &lt;/msup&gt;     &lt;mo&gt;&amp;#x22C5;&lt;/mo&gt;     &lt;mrow&gt;       &lt;mo&gt;(&lt;/mo&gt;       &lt;mfrac&gt;         &lt;msup&gt;           &lt;mi&gt;L&lt;/mi&gt;           &lt;mn&gt;2&lt;/mn&gt;         &lt;/msup&gt;         &lt;mn&gt;2&lt;/mn&gt;       &lt;/mfrac&gt;       &lt;mo&gt;+&lt;/mo&gt;       &lt;mi&gt;R&lt;/mi&gt;       &lt;mo&gt;&amp;#x22C5;&lt;/mo&gt;       &lt;mi&gt;L&lt;/mi&gt;       &lt;mo&gt;)&lt;/mo&gt;     &lt;/mrow&gt;   &lt;/mstyle&gt; &lt;/math&gt;</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">input_i4x-edx-001-problem-39d331eb9b0a48bfbc8a1640bc2871b4_2_1_dynamath</stringProp>
                </elementProp>
                <elementProp name="input_i4x-edx-001-problem-39d331eb9b0a48bfbc8a1640bc2871b4_2_1" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.value">rho*omega^2*(L^2/2 +R*L)</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">input_i4x-edx-001-problem-39d331eb9b0a48bfbc8a1640bc2871b4_2_1</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${SERVER}</stringProp>
            <stringProp name="HTTPSampler.port">8000</stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/courses/edx/001/Manual_Test_Course/modx/i4x://edx/001/problem/39d331eb9b0a48bfbc8a1640bc2871b4/problem_check</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="event_problem_graded" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="event_type" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">problem_graded</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">event_type</stringProp>
                </elementProp>
                <elementProp name="event" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.value">input_i4x-edx-001-problem-39d331eb9b0a48bfbc8a1640bc2871b4_2_1=rho*omega%5E2*(L%5E2%2F2+%2BR*L)+&amp;input_i4x-edx-001-problem-39d331eb9b0a48bfbc8a1640bc2871b4_2_1_dynamath=%3Cmath+xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F1998%2FMath%2FMathML%22%3E%0D%0A++%3Cmstyle+displaystyle%3D%22true%22%3E%0D%0A++++%3Cmi%3E%26%23x3C1%3B%3C%2Fmi%3E%0D%0A++++%3Cmo%3E%26%23x22C5%3B%3C%2Fmo%3E%0D%0A++++%3Cmsup%3E%0D%0A++++++%3Cmi%3E%26%23x3C9%3B%3C%2Fmi%3E%0D%0A++++++%3Cmn%3E2%3C%2Fmn%3E%0D%0A++++%3C%2Fmsup%3E%0D%0A++++%3Cmo%3E%26%23x22C5%3B%3C%2Fmo%3E%0D%0A++++%3Cmrow%3E%0D%0A++++++%3Cmo%3E(%3C%2Fmo%3E%0D%0A++++++%3Cmfrac%3E%0D%0A++++++++%3Cmsup%3E%0D%0A++++++++++%3Cmi%3EL%3C%2Fmi%3E%0D%0A++++++++++%3Cmn%3E2%3C%2Fmn%3E%0D%0A++++++++%3C%2Fmsup%3E%0D%0A++++++++%3Cmn%3E2%3C%2Fmn%3E%0D%0A++++++%3C%2Fmfrac%3E%0D%0A++++++%3Cmo%3E%2B%3C%2Fmo%3E%0D%0A++++++%3Cmi%3ER%3C%2Fmi%3E%0D%0A++++++%3Cmo%3E%26%23x22C5%3B%3C%2Fmo%3E%0D%0A++++++%3Cmi%3EL%3C%2Fmi%3E%0D%0A++++++%3Cmo%3E)%3C%2Fmo%3E%0D%0A++++%3C%2Fmrow%3E%0D%0A++%3C%2Fmstyle%3E%0D%0A%3C%2Fmath%3E&quot;,&quot;\n&lt;h2 class=\&quot;problem-header\&quot;&gt;\n  Rotating Blade\n&lt;/h2&gt;\n\n&lt;section class=\&quot;problem\&quot;&gt;\n  &lt;div&gt;&lt;span&gt;&lt;p&gt;A blade is fixed to a rigid rotor of radius R spinning at  [mathjaxinline] \\omega [/mathjaxinline] rad/sec around the vertical z-axis (see figure). Neglect the effects of gravity. The x-axis is affixed to the rotating blade (it rotates with the blade), with the origin [mathjaxinline] \\left( x=0 \\right) [/mathjaxinline] at the \&quot;root\&quot; of the blade, i.e., at the outer radius of the rotor.&lt;/p&gt;&lt;/span&gt;&lt;ol&gt;&lt;li&gt;Calculate the peak stress in the blade: [mathjaxinline] \\sigma_{n}^{max} [/mathjaxinline]&lt;/li&gt;&lt;li&gt;Calculate the blade elongation: [mathjaxinline] \\delta [/mathjaxinline]&lt;/li&gt;&lt;li&gt;Calculate the displacement of the blade mid-section: [mathjaxinline] u_{x}(L/2) [/mathjaxinline]&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;Given:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Young&apos;s modulus, [mathjaxinline]E[/mathjaxinline], mass density, [mathjaxinline] \\rho [/mathjaxinline].&lt;/li&gt;&lt;li&gt;Constant cross sectional area, [mathjaxinline]A[/mathjaxinline]&lt;/li&gt;&lt;li&gt;Rotor radius [mathjaxinline]R[/mathjaxinline], blade length [mathjaxinline]L[/mathjaxinline]&lt;/li&gt;&lt;li&gt;Angular velocity [mathjaxinline] \\omega [/mathjaxinline]&lt;/li&gt;&lt;p&gt;(Hint: if you work in the non-inertial frame of the rotating blade, the d&amp;#8217;Alembert force/unit volume is [mathjaxinline]\\rho \\omega^2r = \\rho\\omega^2 \\left( R+x \\right)[/mathjaxinline] along the +\\(x\\) direction)&lt;/p&gt;&lt;/ul&gt;&lt;p&gt;&lt;b&gt;Try it: [Correct: rho*omega^2*(L^2/2 +R*L) ]&lt;/b&gt;&lt;/p&gt;\n\t\t[mathjax] \\sigma_{n}^{max} = [/mathjax]\n\t\t&lt;span&gt;&lt;section id=\&quot;inputtype_i4x-edx-001-problem-39d331eb9b0a48bfbc8a1640bc2871b4_2_1\&quot; class=\&quot;text-input-dynamath capa_inputtype \&quot;&gt;&lt;div class=\&quot;correct \&quot; id=\&quot;status_i4x-edx-001-problem-39d331eb9b0a48bfbc8a1640bc2871b4_2_1\&quot;&gt;&lt;input type=\&quot;text\&quot; name=\&quot;input_i4x-edx-001-problem-39d331eb9b0a48bfbc8a1640bc2871b4_2_1\&quot; id=\&quot;input_i4x-edx-001-problem-39d331eb9b0a48bfbc8a1640bc2871b4_2_1\&quot; aria-describedby=\&quot;answer_i4x-edx-001-problem-39d331eb9b0a48bfbc8a1640bc2871b4_2_1\&quot; value=\&quot;rho*omega^2*(L^2/2 +R*L) \&quot; class=\&quot;math\&quot; size=\&quot;40\&quot;/&gt;&lt;p class=\&quot;status\&quot; aria-describedby=\&quot;input_i4x-edx-001-problem-39d331eb9b0a48bfbc8a1640bc2871b4_2_1\&quot;&gt;\n        correct\n      &lt;/p&gt;&lt;p id=\&quot;answer_i4x-edx-001-problem-39d331eb9b0a48bfbc8a1640bc2871b4_2_1\&quot; class=\&quot;answer\&quot;/&gt;&lt;div id=\&quot;display_i4x-edx-001-problem-39d331eb9b0a48bfbc8a1640bc2871b4_2_1\&quot; class=\&quot;equation\&quot;&gt;`{::}`&lt;/div&gt;&lt;textarea style=\&quot;display:none\&quot; id=\&quot;input_i4x-edx-001-problem-39d331eb9b0a48bfbc8a1640bc2871b4_2_1_dynamath\&quot; name=\&quot;input_i4x-edx-001-problem-39d331eb9b0a48bfbc8a1640bc2871b4_2_1_dynamath\&quot;&gt;\n      &lt;/textarea&gt;&lt;/div&gt;&lt;/section&gt;&lt;/span&gt;  \n&lt;/div&gt;\n\n  &lt;section class=\&quot;action\&quot;&gt;\n    &lt;input type=\&quot;hidden\&quot; name=\&quot;problem_id\&quot; value=\&quot;Rotating Blade\&quot; /&gt;\n\n    &lt;input class=\&quot;check Check\&quot; type=\&quot;button\&quot; value=\&quot;Check\&quot; /&gt;\n  &lt;/section&gt;\n&lt;/section&gt;\n</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">event</stringProp>
                </elementProp>
                <elementProp name="page" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.value">${URL}/courses/edx/001/Manual_Test_Course/courseware/ca74c64d167c4926b9bb31eab4db430c/6d184c70c53a4ae1acb4315d897af7cf/</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">page</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${SERVER}</stringProp>
            <stringProp name="HTTPSampler.port">8000</stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/event</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
        </hashTree>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="multi_choice_correct" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <intProp name="LoopController.loops">-1</intProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <longProp name="ThreadGroup.start_time">1374077103000</longProp>
        <longProp name="ThreadGroup.end_time">1374077103000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <CookieManager guiclass="CookiePanel" testclass="CookieManager" testname="HTTP Cookie Manager" enabled="true">
          <collectionProp name="CookieManager.cookies"/>
          <boolProp name="CookieManager.clearEachIteration">false</boolProp>
        </CookieManager>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Auth" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${SERVER}</stringProp>
          <stringProp name="HTTPSampler.port">8000</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/auto_auth</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="change_enrollment_subscribe" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="course_id" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">edx/001/Manual_Test_Course</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">course_id</stringProp>
              </elementProp>
              <elementProp name="enrollment_action" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">enroll</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">enrollment_action</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${SERVER}</stringProp>
          <stringProp name="HTTPSampler.port">8000</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/change_enrollment</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree/>
        <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">true</boolProp>
          <intProp name="LoopController.loops">-1</intProp>
        </LoopController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="event_problem_check" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="event_type" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">problem_check</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">event_type</stringProp>
                </elementProp>
                <elementProp name="event" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.value">input_i4x-edx-001-problem-5ba39d15309f4e29a51e7c2e765defbc_2_1=choice_d</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">event</stringProp>
                </elementProp>
                <elementProp name="page" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.value">${URL}/courses/edx/001/Manual_Test_Course/courseware/4a0fec9bfe034f4a88d04a1d6c7b655e/4b1cd7c4e04b4781bfb0fd56da0de926/</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">page</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${SERVER}</stringProp>
            <stringProp name="HTTPSampler.port">8000</stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/event</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="multi_choice_correct" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="input_i4x-edx-001-problem-5ba39d15309f4e29a51e7c2e765defbc_2_1" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.value">choice_d</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">input_i4x-edx-001-problem-5ba39d15309f4e29a51e7c2e765defbc_2_1</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${SERVER}</stringProp>
            <stringProp name="HTTPSampler.port">8000</stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/courses/edx/001/Manual_Test_Course/modx/i4x://edx/001/problem/5ba39d15309f4e29a51e7c2e765defbc/problem_check</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="event_problem_graded" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="event_type" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">problem_graded</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">event_type</stringProp>
                </elementProp>
                <elementProp name="event" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.value">input_i4x-edx-001-problem-5ba39d15309f4e29a51e7c2e765defbc_2_1=choice_d&quot;,&quot;\n&lt;h2 class=\&quot;problem-header\&quot;&gt;\n  Bentham and Mill\n&lt;/h2&gt;\n\n&lt;section class=\&quot;problem\&quot;&gt;\n  &lt;div&gt;&lt;p&gt;Which of the following best characterizes the difference between Bentham and Mill with respect to their views on individual natural rights? [Correct: (d)]&lt;/p&gt;&lt;span&gt;&lt;form class=\&quot;choicegroup capa_inputtype\&quot; id=\&quot;inputtype_i4x-edx-001-problem-5ba39d15309f4e29a51e7c2e765defbc_2_1\&quot;&gt;&lt;div class=\&quot;indicator_container\&quot;&gt;\n    &lt;/div&gt;&lt;fieldset&gt;&lt;label for=\&quot;input_i4x-edx-001-problem-5ba39d15309f4e29a51e7c2e765defbc_2_1_choice_a\&quot;&gt;&lt;input type=\&quot;radio\&quot; name=\&quot;input_i4x-edx-001-problem-5ba39d15309f4e29a51e7c2e765defbc_2_1\&quot; id=\&quot;input_i4x-edx-001-problem-5ba39d15309f4e29a51e7c2e765defbc_2_1_choice_a\&quot; aria-describedby=\&quot;answer_i4x-edx-001-problem-5ba39d15309f4e29a51e7c2e765defbc_2_1\&quot; value=\&quot;choice_a\&quot;/&gt; a)\tBentham thinks that natural rights must be respected, whereas Mill does not.\n\n        &lt;/label&gt;&lt;label for=\&quot;input_i4x-edx-001-problem-5ba39d15309f4e29a51e7c2e765defbc_2_1_choice_b\&quot;&gt;&lt;input type=\&quot;radio\&quot; name=\&quot;input_i4x-edx-001-problem-5ba39d15309f4e29a51e7c2e765defbc_2_1\&quot; id=\&quot;input_i4x-edx-001-problem-5ba39d15309f4e29a51e7c2e765defbc_2_1_choice_b\&quot; aria-describedby=\&quot;answer_i4x-edx-001-problem-5ba39d15309f4e29a51e7c2e765defbc_2_1\&quot; value=\&quot;choice_b\&quot;/&gt; b)\tBentham thinks that natural rights are supported by his utilitarian theory, whereas Mill does not.\n\n        &lt;/label&gt;&lt;label for=\&quot;input_i4x-edx-001-problem-5ba39d15309f4e29a51e7c2e765defbc_2_1_choice_c\&quot;&gt;&lt;input type=\&quot;radio\&quot; name=\&quot;input_i4x-edx-001-problem-5ba39d15309f4e29a51e7c2e765defbc_2_1\&quot; id=\&quot;input_i4x-edx-001-problem-5ba39d15309f4e29a51e7c2e765defbc_2_1_choice_c\&quot; aria-describedby=\&quot;answer_i4x-edx-001-problem-5ba39d15309f4e29a51e7c2e765defbc_2_1\&quot; value=\&quot;choice_c\&quot;/&gt; c)\tBentham thinks that there are no natural rights, whereas Mill thinks there are natural rights and that utilitarian moral theory cannot accommodate this.\n\n        &lt;/label&gt;&lt;label for=\&quot;input_i4x-edx-001-problem-5ba39d15309f4e29a51e7c2e765defbc_2_1_choice_d\&quot; class=\&quot;choicegroup_correct\&quot;&gt;&lt;input type=\&quot;radio\&quot; name=\&quot;input_i4x-edx-001-problem-5ba39d15309f4e29a51e7c2e765defbc_2_1\&quot; id=\&quot;input_i4x-edx-001-problem-5ba39d15309f4e29a51e7c2e765defbc_2_1_choice_d\&quot; aria-describedby=\&quot;answer_i4x-edx-001-problem-5ba39d15309f4e29a51e7c2e765defbc_2_1\&quot; value=\&quot;choice_d\&quot; checked=\&quot;true\&quot;/&gt; d)\tBentham thinks that there are no natural rights, whereas Mill thinks that utilitarian moral theory supports the idea that we should recognize individual rights.\n\n            \n            &lt;span class=\&quot;sr\&quot; aria-describedby=\&quot;input_i4x-edx-001-problem-5ba39d15309f4e29a51e7c2e765defbc_2_1_choice_d\&quot;&gt;Status: correct&lt;/span&gt;\n        &lt;/label&gt;&lt;label for=\&quot;input_i4x-edx-001-problem-5ba39d15309f4e29a51e7c2e765defbc_2_1_choice_e\&quot;&gt;&lt;input type=\&quot;radio\&quot; name=\&quot;input_i4x-edx-001-problem-5ba39d15309f4e29a51e7c2e765defbc_2_1\&quot; id=\&quot;input_i4x-edx-001-problem-5ba39d15309f4e29a51e7c2e765defbc_2_1_choice_e\&quot; aria-describedby=\&quot;answer_i4x-edx-001-problem-5ba39d15309f4e29a51e7c2e765defbc_2_1\&quot; value=\&quot;choice_e\&quot;/&gt; e)\tBentham and Mill agree that that utilitarian moral theory supports the claim that we should recognize individual rights, but disagree about which rights individuals have.\n\n        &lt;/label&gt;&lt;span id=\&quot;answer_i4x-edx-001-problem-5ba39d15309f4e29a51e7c2e765defbc_2_1\&quot;/&gt;&lt;/fieldset&gt;&lt;/form&gt;&lt;/span&gt;&lt;section class=\&quot;solution-span\&quot;&gt;&lt;span id=\&quot;solution_i4x-edx-001-problem-5ba39d15309f4e29a51e7c2e765defbc_solution_1\&quot;/&gt;&lt;/section&gt;&lt;/div&gt;\n\n  &lt;section class=\&quot;action\&quot;&gt;\n    &lt;input type=\&quot;hidden\&quot; name=\&quot;problem_id\&quot; value=\&quot;Bentham and Mill\&quot; /&gt;\n\n    &lt;input class=\&quot;check Check\&quot; type=\&quot;button\&quot; value=\&quot;Check\&quot; /&gt;\n  &lt;/section&gt;\n&lt;/section&gt;\n</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">event</stringProp>
                </elementProp>
                <elementProp name="page" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.value">${URL}/courses/edx/001/Manual_Test_Course/courseware/4a0fec9bfe034f4a88d04a1d6c7b655e/4b1cd7c4e04b4781bfb0fd56da0de926/</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">page</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${SERVER}</stringProp>
            <stringProp name="HTTPSampler.port">8000</stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/event</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
        </hashTree>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="choice_correct" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <intProp name="LoopController.loops">-1</intProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <longProp name="ThreadGroup.start_time">1374077103000</longProp>
        <longProp name="ThreadGroup.end_time">1374077103000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <CookieManager guiclass="CookiePanel" testclass="CookieManager" testname="HTTP Cookie Manager" enabled="true">
          <collectionProp name="CookieManager.cookies"/>
          <boolProp name="CookieManager.clearEachIteration">false</boolProp>
        </CookieManager>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Auth" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${SERVER}</stringProp>
          <stringProp name="HTTPSampler.port">8000</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/auto_auth</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="change_enrollment_subscribe" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="course_id" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">edx/001/Manual_Test_Course</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">course_id</stringProp>
              </elementProp>
              <elementProp name="enrollment_action" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">enroll</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">enrollment_action</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${SERVER}</stringProp>
          <stringProp name="HTTPSampler.port">8000</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/change_enrollment</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree/>
        <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">true</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </LoopController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="event_problem_check" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="event_type" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">problem_check</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">event_type</stringProp>
                </elementProp>
                <elementProp name="event" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.value">input_i4x-edx-001-problem-4c0151c75bb947b6bddef18b607dae93_2_1%5B%5D=choice_0&amp;input_i4x-edx-001-problem-4c0151c75bb947b6bddef18b607dae93_2_1%5B%5D=choice_2&amp;input_i4x-edx-001-problem-4c0151c75bb947b6bddef18b607dae93_2_1%5B%5D=choice_5</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">event</stringProp>
                </elementProp>
                <elementProp name="page" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.value">${URL}/courses/edx/001/Manual_Test_Course/courseware/4a0fec9bfe034f4a88d04a1d6c7b655e/b55ef26f24bc41b686f86b34389514c0/</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">page</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${SERVER}</stringProp>
            <stringProp name="HTTPSampler.port">8000</stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/event</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="choice_correct" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="input_i4x-edx-001-problem-4c0151c75bb947b6bddef18b607dae93_2_1[]" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.value">choice_0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">input_i4x-edx-001-problem-4c0151c75bb947b6bddef18b607dae93_2_1[]</stringProp>
                </elementProp>
                <elementProp name="input_i4x-edx-001-problem-4c0151c75bb947b6bddef18b607dae93_2_1[]" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">choice_2</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">input_i4x-edx-001-problem-4c0151c75bb947b6bddef18b607dae93_2_1[]</stringProp>
                </elementProp>
                <elementProp name="input_i4x-edx-001-problem-4c0151c75bb947b6bddef18b607dae93_2_1[]" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">choice_5</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">input_i4x-edx-001-problem-4c0151c75bb947b6bddef18b607dae93_2_1[]</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${SERVER}</stringProp>
            <stringProp name="HTTPSampler.port">8000</stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/courses/edx/001/Manual_Test_Course/modx/i4x://edx/001/problem/4c0151c75bb947b6bddef18b607dae93/problem_check</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="event_problem_graded" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="event_type" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">problem_graded</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">event_type</stringProp>
                </elementProp>
                <elementProp name="event" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.value">input_i4x-edx-001-problem-4c0151c75bb947b6bddef18b607dae93_2_1%5B%5D=choice_0&amp;input_i4x-edx-001-problem-4c0151c75bb947b6bddef18b607dae93_2_1%5B%5D=choice_2&amp;input_i4x-edx-001-problem-4c0151c75bb947b6bddef18b607dae93_2_1%5B%5D=choice_5&quot;,&quot;\n&lt;h2 class=\&quot;problem-header\&quot;&gt;\n  Lorentz Force\n&lt;/h2&gt;\n\n&lt;section class=\&quot;problem\&quot;&gt;\n  &lt;div&gt;&lt;div&gt;&lt;span&gt;&lt;p&gt;Consider a hypothetical magnetic field pointing out of your computer screen. Now imagine an electron traveling from right to left in the plane of your screen.&lt;/p&gt;&lt;p&gt;The magnitude of the force experienced by the electron is proportional the product of which of the following? (Select all that apply.) [Correct: first, third, and last options]&lt;/p&gt;&lt;/span&gt;&lt;span&gt;&lt;form class=\&quot;choicegroup capa_inputtype\&quot; id=\&quot;inputtype_i4x-edx-001-problem-4c0151c75bb947b6bddef18b607dae93_2_1\&quot;&gt;&lt;div class=\&quot;indicator_container\&quot;&gt;&lt;span class=\&quot;correct\&quot; id=\&quot;status_i4x-edx-001-problem-4c0151c75bb947b6bddef18b607dae93_2_1\&quot;&gt;&lt;span class=\&quot;sr\&quot;&gt;Status: correct&lt;/span&gt;&lt;/span&gt;&lt;/div&gt;&lt;fieldset&gt;&lt;label for=\&quot;input_i4x-edx-001-problem-4c0151c75bb947b6bddef18b607dae93_2_1_choice_0\&quot;&gt;&lt;input type=\&quot;checkbox\&quot; name=\&quot;input_i4x-edx-001-problem-4c0151c75bb947b6bddef18b607dae93_2_1[]\&quot; id=\&quot;input_i4x-edx-001-problem-4c0151c75bb947b6bddef18b607dae93_2_1_choice_0\&quot; aria-describedby=\&quot;answer_i4x-edx-001-problem-4c0151c75bb947b6bddef18b607dae93_2_1\&quot; value=\&quot;choice_0\&quot; checked=\&quot;true\&quot;/&gt;&lt;text&gt;Magnetic field strength&amp;#8230;&lt;/text&gt;&lt;/label&gt;&lt;label for=\&quot;input_i4x-edx-001-problem-4c0151c75bb947b6bddef18b607dae93_2_1_choice_1\&quot;&gt;&lt;input type=\&quot;checkbox\&quot; name=\&quot;input_i4x-edx-001-problem-4c0151c75bb947b6bddef18b607dae93_2_1[]\&quot; id=\&quot;input_i4x-edx-001-problem-4c0151c75bb947b6bddef18b607dae93_2_1_choice_1\&quot; aria-describedby=\&quot;answer_i4x-edx-001-problem-4c0151c75bb947b6bddef18b607dae93_2_1\&quot; value=\&quot;choice_1\&quot;/&gt;&lt;text&gt;Electric field strength&amp;#8230;&lt;/text&gt;&lt;/label&gt;&lt;label for=\&quot;input_i4x-edx-001-problem-4c0151c75bb947b6bddef18b607dae93_2_1_choice_2\&quot;&gt;&lt;input type=\&quot;checkbox\&quot; name=\&quot;input_i4x-edx-001-problem-4c0151c75bb947b6bddef18b607dae93_2_1[]\&quot; id=\&quot;input_i4x-edx-001-problem-4c0151c75bb947b6bddef18b607dae93_2_1_choice_2\&quot; aria-describedby=\&quot;answer_i4x-edx-001-problem-4c0151c75bb947b6bddef18b607dae93_2_1\&quot; value=\&quot;choice_2\&quot; checked=\&quot;true\&quot;/&gt;&lt;text&gt;Electric charge of the electron&amp;#8230;&lt;/text&gt;&lt;/label&gt;&lt;label for=\&quot;input_i4x-edx-001-problem-4c0151c75bb947b6bddef18b607dae93_2_1_choice_3\&quot;&gt;&lt;input type=\&quot;checkbox\&quot; name=\&quot;input_i4x-edx-001-problem-4c0151c75bb947b6bddef18b607dae93_2_1[]\&quot; id=\&quot;input_i4x-edx-001-problem-4c0151c75bb947b6bddef18b607dae93_2_1_choice_3\&quot; aria-describedby=\&quot;answer_i4x-edx-001-problem-4c0151c75bb947b6bddef18b607dae93_2_1\&quot; value=\&quot;choice_3\&quot;/&gt;&lt;text&gt;Radius of the electron&amp;#8230;&lt;/text&gt;&lt;/label&gt;&lt;label for=\&quot;input_i4x-edx-001-problem-4c0151c75bb947b6bddef18b607dae93_2_1_choice_4\&quot;&gt;&lt;input type=\&quot;checkbox\&quot; name=\&quot;input_i4x-edx-001-problem-4c0151c75bb947b6bddef18b607dae93_2_1[]\&quot; id=\&quot;input_i4x-edx-001-problem-4c0151c75bb947b6bddef18b607dae93_2_1_choice_4\&quot; aria-describedby=\&quot;answer_i4x-edx-001-problem-4c0151c75bb947b6bddef18b607dae93_2_1\&quot; value=\&quot;choice_4\&quot;/&gt;&lt;text&gt;Mass of the electron&amp;#8230;&lt;/text&gt;&lt;/label&gt;&lt;label for=\&quot;input_i4x-edx-001-problem-4c0151c75bb947b6bddef18b607dae93_2_1_choice_5\&quot;&gt;&lt;input type=\&quot;checkbox\&quot; name=\&quot;input_i4x-edx-001-problem-4c0151c75bb947b6bddef18b607dae93_2_1[]\&quot; id=\&quot;input_i4x-edx-001-problem-4c0151c75bb947b6bddef18b607dae93_2_1_choice_5\&quot; aria-describedby=\&quot;answer_i4x-edx-001-problem-4c0151c75bb947b6bddef18b607dae93_2_1\&quot; value=\&quot;choice_5\&quot; checked=\&quot;true\&quot;/&gt;&lt;text&gt;Velocity of the electron&amp;#8230;&lt;/text&gt;&lt;/label&gt;&lt;span id=\&quot;answer_i4x-edx-001-problem-4c0151c75bb947b6bddef18b607dae93_2_1\&quot;/&gt;&lt;/fieldset&gt;&lt;/form&gt;&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;\n\n  &lt;section class=\&quot;action\&quot;&gt;\n    &lt;input type=\&quot;hidden\&quot; name=\&quot;problem_id\&quot; value=\&quot;Lorentz Force\&quot; /&gt;\n\n    &lt;input class=\&quot;check Check\&quot; type=\&quot;button\&quot; value=\&quot;Check\&quot; /&gt;\n  &lt;/section&gt;\n&lt;/section&gt;\n</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">event</stringProp>
                </elementProp>
                <elementProp name="page" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.value">${URL}/courses/edx/001/Manual_Test_Course/courseware/4a0fec9bfe034f4a88d04a1d6c7b655e/b55ef26f24bc41b686f86b34389514c0/</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">page</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${SERVER}</stringProp>
            <stringProp name="HTTPSampler.port">8000</stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/event</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
        </hashTree>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="option_correct" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <intProp name="LoopController.loops">-1</intProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <longProp name="ThreadGroup.start_time">1374077103000</longProp>
        <longProp name="ThreadGroup.end_time">1374077103000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <CookieManager guiclass="CookiePanel" testclass="CookieManager" testname="HTTP Cookie Manager" enabled="true">
          <collectionProp name="CookieManager.cookies"/>
          <boolProp name="CookieManager.clearEachIteration">false</boolProp>
        </CookieManager>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Auth" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${SERVER}</stringProp>
          <stringProp name="HTTPSampler.port">8000</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/auto_auth</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="change_enrollment_subscribe" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="course_id" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">edx/001/Manual_Test_Course</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">course_id</stringProp>
              </elementProp>
              <elementProp name="enrollment_action" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">enroll</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">enrollment_action</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${SERVER}</stringProp>
          <stringProp name="HTTPSampler.port">8000</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/change_enrollment</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree/>
        <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">true</boolProp>
          <intProp name="LoopController.loops">-1</intProp>
        </LoopController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="event_problem_check" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="event_type" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">problem_check</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">event_type</stringProp>
                </elementProp>
                <elementProp name="event" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.value">input_i4x-edx-001-problem-d631ef90301b4c5fb720611af01e39c5_2_1=num</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">event</stringProp>
                </elementProp>
                <elementProp name="page" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.value">${URL}/courses/edx/001/Manual_Test_Course/courseware/4a0fec9bfe034f4a88d04a1d6c7b655e/6516823594ed4a9bacb9d3a8174ffbb7/</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">page</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${SERVER}</stringProp>
            <stringProp name="HTTPSampler.port">8000</stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/event</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="option_correct" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="input_i4x-edx-001-problem-d631ef90301b4c5fb720611af01e39c5_2_1" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.value">num</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">input_i4x-edx-001-problem-d631ef90301b4c5fb720611af01e39c5_2_1</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${SERVER}</stringProp>
            <stringProp name="HTTPSampler.port">8000</stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/courses/edx/001/Manual_Test_Course/modx/i4x://edx/001/problem/d631ef90301b4c5fb720611af01e39c5/problem_check</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="event_problem_graded" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="event_type" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">problem_graded</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">event_type</stringProp>
                </elementProp>
                <elementProp name="event" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.value">input_i4x-edx-001-problem-d631ef90301b4c5fb720611af01e39c5_2_1=num&quot;,&quot;\n&lt;h2 class=\&quot;problem-header\&quot;&gt;\n  Output Type\n&lt;/h2&gt;\n\n&lt;section class=\&quot;problem\&quot;&gt;\n  &lt;div&gt;&lt;pre&gt;\ndef a(x):\n   &apos;&apos;&apos;\n   x: int or float.\n   &apos;&apos;&apos;\n   return x + 1\n &lt;/pre&gt;&lt;p&gt;\n Indicate the type of the output that the function &lt;code&gt;a&lt;/code&gt; will yield. [Correct: num]\n &lt;span&gt;&lt;form class=\&quot;option-input\&quot;&gt;&lt;select name=\&quot;input_i4x-edx-001-problem-d631ef90301b4c5fb720611af01e39c5_2_1\&quot; id=\&quot;input_i4x-edx-001-problem-d631ef90301b4c5fb720611af01e39c5_2_1\&quot; aria-describedby=\&quot;answer_i4x-edx-001-problem-d631ef90301b4c5fb720611af01e39c5_2_1\&quot;&gt;&lt;option value=\&quot;option_i4x-edx-001-problem-d631ef90301b4c5fb720611af01e39c5_2_1_dummy_default\&quot;&gt;  &lt;/option&gt;&lt;option value=\&quot;NoneType\&quot;&gt; NoneType&lt;/option&gt;&lt;option value=\&quot;num\&quot; selected=\&quot;true\&quot;&gt; num&lt;/option&gt;&lt;option value=\&quot;int\&quot;&gt; int&lt;/option&gt;&lt;option value=\&quot;float\&quot;&gt; float&lt;/option&gt;&lt;option value=\&quot;boolean\&quot;&gt; boolean&lt;/option&gt;&lt;/select&gt;&lt;span id=\&quot;answer_i4x-edx-001-problem-d631ef90301b4c5fb720611af01e39c5_2_1\&quot;/&gt;&lt;span class=\&quot;correct\&quot; id=\&quot;status_i4x-edx-001-problem-d631ef90301b4c5fb720611af01e39c5_2_1\&quot; aria-describedby=\&quot;input_i4x-edx-001-problem-d631ef90301b4c5fb720611af01e39c5_2_1\&quot;&gt;&lt;span class=\&quot;sr\&quot;&gt;Status: correct&lt;/span&gt;&lt;/span&gt;&lt;/form&gt;&lt;/span&gt; &lt;/p&gt;&lt;/div&gt;\n\n  &lt;section class=\&quot;action\&quot;&gt;\n    &lt;input type=\&quot;hidden\&quot; name=\&quot;problem_id\&quot; value=\&quot;Output Type\&quot; /&gt;\n\n    &lt;input class=\&quot;check Check\&quot; type=\&quot;button\&quot; value=\&quot;Check\&quot; /&gt;\n    &lt;button class=\&quot;show\&quot;&gt;&lt;span class=\&quot;show-label\&quot;&gt;Show Answer(s)&lt;/span&gt; &lt;span class=\&quot;sr\&quot;&gt;(for question(s) above - adjacent to each field)&lt;/span&gt;&lt;/button&gt;\n  &lt;/section&gt;\n&lt;/section&gt;\n</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">event</stringProp>
                </elementProp>
                <elementProp name="page" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.value">${URL}/courses/edx/001/Manual_Test_Course/courseware/4a0fec9bfe034f4a88d04a1d6c7b655e/6516823594ed4a9bacb9d3a8174ffbb7/</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">page</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${SERVER}</stringProp>
            <stringProp name="HTTPSampler.port">8000</stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/event</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
        </hashTree>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="string_correct" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <intProp name="LoopController.loops">-1</intProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <longProp name="ThreadGroup.start_time">1374077103000</longProp>
        <longProp name="ThreadGroup.end_time">1374077103000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <CookieManager guiclass="CookiePanel" testclass="CookieManager" testname="HTTP Cookie Manager" enabled="true">
          <collectionProp name="CookieManager.cookies"/>
          <boolProp name="CookieManager.clearEachIteration">false</boolProp>
        </CookieManager>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Auth" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${SERVER}</stringProp>
          <stringProp name="HTTPSampler.port">8000</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/auto_auth</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="change_enrollment_subscribe" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="course_id" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">edx/001/Manual_Test_Course</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">course_id</stringProp>
              </elementProp>
              <elementProp name="enrollment_action" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">enroll</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">enrollment_action</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${SERVER}</stringProp>
          <stringProp name="HTTPSampler.port">8000</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/change_enrollment</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree/>
        <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">true</boolProp>
          <intProp name="LoopController.loops">-1</intProp>
        </LoopController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="event_problem_check" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="event_type" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">problem_check</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">event_type</stringProp>
                </elementProp>
                <elementProp name="event" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.value">input_i4x-edx-001-problem-0302c6f2497d4a4189d42eafe9494873_2_1=gpa</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">event</stringProp>
                </elementProp>
                <elementProp name="page" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.value">${URL}/courses/edx/001/Manual_Test_Course/courseware/4a0fec9bfe034f4a88d04a1d6c7b655e/485249c73623456ca1eca1f870911454/</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">page</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${SERVER}</stringProp>
            <stringProp name="HTTPSampler.port">8000</stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/event</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="string_correct" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="input_i4x-edx-001-problem-0302c6f2497d4a4189d42eafe9494873_2_1" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.value">gpa</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">input_i4x-edx-001-problem-0302c6f2497d4a4189d42eafe9494873_2_1</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${SERVER}</stringProp>
            <stringProp name="HTTPSampler.port">8000</stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/courses/edx/001/Manual_Test_Course/modx/i4x://edx/001/problem/0302c6f2497d4a4189d42eafe9494873/problem_check</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="event_problem_graded" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="event_type" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">problem_graded</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">event_type</stringProp>
                </elementProp>
                <elementProp name="event" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.value">input_i4x-edx-001-problem-0302c6f2497d4a4189d42eafe9494873_2_1=gpa&quot;,&quot;\n&lt;h2 class=\&quot;problem-header\&quot;&gt;\n  Normal Stress\n&lt;/h2&gt;\n\n&lt;section class=\&quot;problem\&quot;&gt;\n  &lt;div&gt;&lt;span&gt;&lt;p&gt;The profile of normal stress on section [mathjaxinline] x_c:\\sigma_n \\left( x_c, y \\right) [/mathjaxinline] has what units? [Correct: \&quot;GPa\&quot; or \&quot;gpa\&quot;]&lt;/p&gt;&lt;/span&gt;&lt;span&gt;&lt;section id=\&quot;inputtype_i4x-edx-001-problem-0302c6f2497d4a4189d42eafe9494873_2_1\&quot; class=\&quot; capa_inputtype \&quot;&gt;&lt;div class=\&quot;correct \&quot; id=\&quot;status_i4x-edx-001-problem-0302c6f2497d4a4189d42eafe9494873_2_1\&quot;&gt;&lt;input type=\&quot;text\&quot; name=\&quot;input_i4x-edx-001-problem-0302c6f2497d4a4189d42eafe9494873_2_1\&quot; id=\&quot;input_i4x-edx-001-problem-0302c6f2497d4a4189d42eafe9494873_2_1\&quot; aria-describedby=\&quot;answer_i4x-edx-001-problem-0302c6f2497d4a4189d42eafe9494873_2_1\&quot; value=\&quot;gpa\&quot; size=\&quot;20\&quot;/&gt;&lt;p class=\&quot;status\&quot; aria-describedby=\&quot;input_i4x-edx-001-problem-0302c6f2497d4a4189d42eafe9494873_2_1\&quot;&gt;\n        correct\n      &lt;/p&gt;&lt;p id=\&quot;answer_i4x-edx-001-problem-0302c6f2497d4a4189d42eafe9494873_2_1\&quot; class=\&quot;answer\&quot;/&gt;&lt;/div&gt;&lt;/section&gt;&lt;/span&gt;&lt;/div&gt;\n\n  &lt;section class=\&quot;action\&quot;&gt;\n    &lt;input type=\&quot;hidden\&quot; name=\&quot;problem_id\&quot; value=\&quot;Normal Stress\&quot; /&gt;\n\n    &lt;input class=\&quot;check Check\&quot; type=\&quot;button\&quot; value=\&quot;Check\&quot; /&gt;\n  &lt;/section&gt;\n&lt;/section&gt;\n</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">event</stringProp>
                </elementProp>
                <elementProp name="page" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.value">${URL}/courses/edx/001/Manual_Test_Course/courseware/4a0fec9bfe034f4a88d04a1d6c7b655e/485249c73623456ca1eca1f870911454/</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">page</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${SERVER}</stringProp>
            <stringProp name="HTTPSampler.port">8000</stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/event</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
        </hashTree>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="numerical_correct" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <intProp name="LoopController.loops">-1</intProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <longProp name="ThreadGroup.start_time">1374077103000</longProp>
        <longProp name="ThreadGroup.end_time">1374077103000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <CookieManager guiclass="CookiePanel" testclass="CookieManager" testname="HTTP Cookie Manager" enabled="true">
          <collectionProp name="CookieManager.cookies"/>
          <boolProp name="CookieManager.clearEachIteration">false</boolProp>
        </CookieManager>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Auth" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${SERVER}</stringProp>
          <stringProp name="HTTPSampler.port">8000</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/auto_auth</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="change_enrollment_subscribe" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="course_id" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">edx/001/Manual_Test_Course</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">course_id</stringProp>
              </elementProp>
              <elementProp name="enrollment_action" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">enroll</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">enrollment_action</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${SERVER}</stringProp>
          <stringProp name="HTTPSampler.port">8000</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/change_enrollment</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree/>
        <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">true</boolProp>
          <intProp name="LoopController.loops">-1</intProp>
        </LoopController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="event_problem_check" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="event_type" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">problem_check</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">event_type</stringProp>
                </elementProp>
                <elementProp name="event" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.value">input_i4x-edx-001-problem-74566a17d61a4adfa6b38175fa4f23d1_2_1=2268000.0&amp;input_i4x-edx-001-problem-74566a17d61a4adfa6b38175fa4f23d1_3_1=2160000</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">event</stringProp>
                </elementProp>
                <elementProp name="page" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.value">${URL}/courses/edx/001/Manual_Test_Course/courseware/ca74c64d167c4926b9bb31eab4db430c/3adc3541e3b44ba0b5fe56b7d65319aa/</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">page</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${SERVER}</stringProp>
            <stringProp name="HTTPSampler.port">8000</stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/event</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="numerical_correct" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="input_i4x-edx-001-problem-74566a17d61a4adfa6b38175fa4f23d1_2_1" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">2268000.0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">input_i4x-edx-001-problem-74566a17d61a4adfa6b38175fa4f23d1_2_1</stringProp>
                </elementProp>
                <elementProp name="input_i4x-edx-001-problem-74566a17d61a4adfa6b38175fa4f23d1_3_1" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">2160000</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">input_i4x-edx-001-problem-74566a17d61a4adfa6b38175fa4f23d1_3_1</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${SERVER}</stringProp>
            <stringProp name="HTTPSampler.port">8000</stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/courses/edx/001/Manual_Test_Course/modx/i4x://edx/001/problem/74566a17d61a4adfa6b38175fa4f23d1/problem_check</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="event_problem_graded" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="event_type" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">problem_graded</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">event_type</stringProp>
                </elementProp>
                <elementProp name="event" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.value">input_i4x-edx-001-problem-74566a17d61a4adfa6b38175fa4f23d1_2_1=2268000.0&amp;input_i4x-edx-001-problem-74566a17d61a4adfa6b38175fa4f23d1_3_1=2160000&quot;,&quot;\n&lt;h2 class=\&quot;problem-header\&quot;&gt;\n  Calories\n&lt;/h2&gt;\n\n&lt;section class=\&quot;problem\&quot;&gt;\n  &lt;div&gt;&lt;span&gt;\nAccording to McDonald&apos;s\n&lt;a href=\&quot;http://nutrition.mcdonalds.com/getnutrition/nutritionfacts.pdf\&quot;&gt;nutrition\nfacts&lt;/a&gt; a \\(Big Mac\\) provides \\(540\\) kiloCalories of energy.  (1 dietitian&apos;s\ncalorie is 1000 physicist&apos;s calories.)  A typical automobile lead-acid\nbattery can supply 50 Ampere-hours at 12 Volts.  We can compare these by\nconverting the energy specifications to common units.  The SI unit of\nenergy is the Joule=1 Watt-second.  One physicist&apos;s calorie is 4.2 Joules.\n&lt;/span&gt;&lt;span&gt;&lt;br/&gt;\nHow many Joules are there in a \\(Big Mac\\)? [Correct: 2268000.0]\n&lt;/span&gt;&lt;span&gt;&lt;section id=\&quot;inputtype_i4x-edx-001-problem-74566a17d61a4adfa6b38175fa4f23d1_2_1\&quot; class=\&quot; capa_inputtype \&quot;&gt;&lt;div class=\&quot;correct \&quot; id=\&quot;status_i4x-edx-001-problem-74566a17d61a4adfa6b38175fa4f23d1_2_1\&quot;&gt;&lt;input type=\&quot;text\&quot; name=\&quot;input_i4x-edx-001-problem-74566a17d61a4adfa6b38175fa4f23d1_2_1\&quot; id=\&quot;input_i4x-edx-001-problem-74566a17d61a4adfa6b38175fa4f23d1_2_1\&quot; aria-describedby=\&quot;answer_i4x-edx-001-problem-74566a17d61a4adfa6b38175fa4f23d1_2_1\&quot; value=\&quot;2268000.0\&quot;/&gt;&lt;p class=\&quot;status\&quot; aria-describedby=\&quot;input_i4x-edx-001-problem-74566a17d61a4adfa6b38175fa4f23d1_2_1\&quot;&gt;\n        correct\n      &lt;/p&gt;&lt;p id=\&quot;answer_i4x-edx-001-problem-74566a17d61a4adfa6b38175fa4f23d1_2_1\&quot; class=\&quot;answer\&quot;/&gt;&lt;/div&gt;&lt;/section&gt;&lt;/span&gt;&lt;span&gt;&lt;br/&gt;\nHow many Joules are there in a car battery? [Correct: 2160000]\n&lt;/span&gt;&lt;span&gt;&lt;section id=\&quot;inputtype_i4x-edx-001-problem-74566a17d61a4adfa6b38175fa4f23d1_3_1\&quot; class=\&quot; capa_inputtype \&quot;&gt;&lt;div class=\&quot;correct \&quot; id=\&quot;status_i4x-edx-001-problem-74566a17d61a4adfa6b38175fa4f23d1_3_1\&quot;&gt;&lt;input type=\&quot;text\&quot; name=\&quot;input_i4x-edx-001-problem-74566a17d61a4adfa6b38175fa4f23d1_3_1\&quot; id=\&quot;input_i4x-edx-001-problem-74566a17d61a4adfa6b38175fa4f23d1_3_1\&quot; aria-describedby=\&quot;answer_i4x-edx-001-problem-74566a17d61a4adfa6b38175fa4f23d1_3_1\&quot; value=\&quot;2160000\&quot;/&gt;&lt;p class=\&quot;status\&quot; aria-describedby=\&quot;input_i4x-edx-001-problem-74566a17d61a4adfa6b38175fa4f23d1_3_1\&quot;&gt;\n        correct\n      &lt;/p&gt;&lt;p id=\&quot;answer_i4x-edx-001-problem-74566a17d61a4adfa6b38175fa4f23d1_3_1\&quot; class=\&quot;answer\&quot;/&gt;&lt;/div&gt;&lt;/section&gt;&lt;/span&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/div&gt;\n\n  &lt;section class=\&quot;action\&quot;&gt;\n    &lt;input type=\&quot;hidden\&quot; name=\&quot;problem_id\&quot; value=\&quot;Calories\&quot; /&gt;\n\n    &lt;input class=\&quot;check Check\&quot; type=\&quot;button\&quot; value=\&quot;Check\&quot; /&gt;\n    &lt;button class=\&quot;show\&quot;&gt;&lt;span class=\&quot;show-label\&quot;&gt;Show Answer(s)&lt;/span&gt; &lt;span class=\&quot;sr\&quot;&gt;(for question(s) above - adjacent to each field)&lt;/span&gt;&lt;/button&gt;\n  &lt;/section&gt;\n&lt;/section&gt;\n</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">event</stringProp>
                </elementProp>
                <elementProp name="page" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.value">${URL}/courses/edx/001/Manual_Test_Course/courseware/ca74c64d167c4926b9bb31eab4db430c/3adc3541e3b44ba0b5fe56b7d65319aa/</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">page</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${SERVER}</stringProp>
            <stringProp name="HTTPSampler.port">8000</stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/event</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
        </hashTree>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="symbolic_correct" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <intProp name="LoopController.loops">-1</intProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <longProp name="ThreadGroup.start_time">1374077103000</longProp>
        <longProp name="ThreadGroup.end_time">1374077103000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <CookieManager guiclass="CookiePanel" testclass="CookieManager" testname="HTTP Cookie Manager" enabled="true">
          <collectionProp name="CookieManager.cookies"/>
          <boolProp name="CookieManager.clearEachIteration">false</boolProp>
        </CookieManager>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Auth" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${SERVER}</stringProp>
          <stringProp name="HTTPSampler.port">8000</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/auto_auth</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="change_enrollment_subscribe" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="course_id" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">edx/001/Manual_Test_Course</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">course_id</stringProp>
              </elementProp>
              <elementProp name="enrollment_action" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">enroll</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">enrollment_action</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${SERVER}</stringProp>
          <stringProp name="HTTPSampler.port">8000</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/change_enrollment</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree/>
        <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">true</boolProp>
          <intProp name="LoopController.loops">-1</intProp>
        </LoopController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="event_problem_check" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="event_type" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">problem_check</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">event_type</stringProp>
                </elementProp>
                <elementProp name="event" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.value">input_i4x-edx-001-problem-da668d665e8e4354a1ffb221a218eee0_2_1=-I*pi**R%5E2*B_y&amp;input_i4x-edx-001-problem-da668d665e8e4354a1ffb221a218eee0_2_1_dynamath=%3Cmath+xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F1998%2FMath%2FMathML%22%3E%0D%0A++%3Cmstyle+displaystyle%3D%22true%22%3E%0D%0A++++%3Cmo%3E-%3C%2Fmo%3E%0D%0A++++%3Cmi%3EI%3C%2Fmi%3E%0D%0A++++%3Cmo%3E%26%23x22C5%3B%3C%2Fmo%3E%0D%0A++++%3Cmi%3E%26%23x3C0%3B%3C%2Fmi%3E%0D%0A++++%3Cmo%3E%26%23x22C6%3B%3C%2Fmo%3E%0D%0A++++%3Cmsup%3E%0D%0A++++++%3Cmi%3ER%3C%2Fmi%3E%0D%0A++++++%3Cmn%3E2%3C%2Fmn%3E%0D%0A++++%3C%2Fmsup%3E%0D%0A++++%3Cmo%3E%26%23x22C5%3B%3C%2Fmo%3E%0D%0A++++%3Cmsub%3E%0D%0A++++++%3Cmi%3EB%3C%2Fmi%3E%0D%0A++++++%3Cmi%3Ey%3C%2Fmi%3E%0D%0A++++%3C%2Fmsub%3E%0D%0A++%3C%2Fmstyle%3E%0D%0A%3C%2Fmath%3E&amp;input_i4x-edx-001-problem-da668d665e8e4354a1ffb221a218eee0_3_1=I*pi**R%5E2*B_x&amp;input_i4x-edx-001-problem-da668d665e8e4354a1ffb221a218eee0_3_1_dynamath=%3Cmath+xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F1998%2FMath%2FMathML%22%3E%0D%0A++%3Cmstyle+displaystyle%3D%22true%22%3E%0D%0A++++%3Cmi%3EI%3C%2Fmi%3E%0D%0A++++%3Cmo%3E%26%23x22C5%3B%3C%2Fmo%3E%0D%0A++++%3Cmi%3E%26%23x3C0%3B%3C%2Fmi%3E%0D%0A++++%3Cmo%3E%26%23x22C6%3B%3C%2Fmo%3E%0D%0A++++%3Cmsup%3E%0D%0A++++++%3Cmi%3ER%3C%2Fmi%3E%0D%0A++++++%3Cmn%3E2%3C%2Fmn%3E%0D%0A++++%3C%2Fmsup%3E%0D%0A++++%3Cmo%3E%26%23x22C5%3B%3C%2Fmo%3E%0D%0A++++%3Cmsub%3E%0D%0A++++++%3Cmi%3EB%3C%2Fmi%3E%0D%0A++++++%3Cmi%3Ex%3C%2Fmi%3E%0D%0A++++%3C%2Fmsub%3E%0D%0A++%3C%2Fmstyle%3E%0D%0A%3C%2Fmath%3E</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">event</stringProp>
                </elementProp>
                <elementProp name="page" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.value">${URL}/courses/edx/001/Manual_Test_Course/courseware/ca74c64d167c4926b9bb31eab4db430c/7a156bc950f24a029c43a933e7fb886a/</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">page</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${SERVER}</stringProp>
            <stringProp name="HTTPSampler.port">8000</stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/event</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="symbolic_correct" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="input_i4x-edx-001-problem-da668d665e8e4354a1ffb221a218eee0_2_1" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">-I*pi**R^2*B_y</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">input_i4x-edx-001-problem-da668d665e8e4354a1ffb221a218eee0_2_1</stringProp>
                </elementProp>
                <elementProp name="input_i4x-edx-001-problem-da668d665e8e4354a1ffb221a218eee0_2_1_dynamath" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">&lt;math xmlns=&quot;http://www.w3.org/1998/Math/MathML&quot;&gt;   &lt;mstyle displaystyle=&quot;true&quot;&gt;     &lt;mo&gt;-&lt;/mo&gt;     &lt;mi&gt;I&lt;/mi&gt;     &lt;mo&gt;&amp;#x22C5;&lt;/mo&gt;     &lt;mi&gt;&amp;#x3C0;&lt;/mi&gt;     &lt;mo&gt;&amp;#x22C6;&lt;/mo&gt;     &lt;msup&gt;       &lt;mi&gt;R&lt;/mi&gt;       &lt;mn&gt;2&lt;/mn&gt;     &lt;/msup&gt;     &lt;mo&gt;&amp;#x22C5;&lt;/mo&gt;     &lt;msub&gt;       &lt;mi&gt;B&lt;/mi&gt;       &lt;mi&gt;y&lt;/mi&gt;     &lt;/msub&gt;   &lt;/mstyle&gt; &lt;/math&gt;</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">input_i4x-edx-001-problem-da668d665e8e4354a1ffb221a218eee0_2_1_dynamath</stringProp>
                </elementProp>
                <elementProp name="input_i4x-edx-001-problem-da668d665e8e4354a1ffb221a218eee0_3_1" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">I*pi**R^2*B_x</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">input_i4x-edx-001-problem-da668d665e8e4354a1ffb221a218eee0_3_1</stringProp>
                </elementProp>
                <elementProp name="input_i4x-edx-001-problem-da668d665e8e4354a1ffb221a218eee0_3_1_dynamath" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">&lt;math xmlns=&quot;http://www.w3.org/1998/Math/MathML&quot;&gt;   &lt;mstyle displaystyle=&quot;true&quot;&gt;     &lt;mi&gt;I&lt;/mi&gt;     &lt;mo&gt;&amp;#x22C5;&lt;/mo&gt;     &lt;mi&gt;&amp;#x3C0;&lt;/mi&gt;     &lt;mo&gt;&amp;#x22C6;&lt;/mo&gt;     &lt;msup&gt;       &lt;mi&gt;R&lt;/mi&gt;       &lt;mn&gt;2&lt;/mn&gt;     &lt;/msup&gt;     &lt;mo&gt;&amp;#x22C5;&lt;/mo&gt;     &lt;msub&gt;       &lt;mi&gt;B&lt;/mi&gt;       &lt;mi&gt;x&lt;/mi&gt;     &lt;/msub&gt;   &lt;/mstyle&gt; &lt;/math&gt;</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">input_i4x-edx-001-problem-da668d665e8e4354a1ffb221a218eee0_3_1_dynamath</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${SERVER}</stringProp>
            <stringProp name="HTTPSampler.port">8000</stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/courses/edx/001/Manual_Test_Course/modx/i4x://edx/001/problem/da668d665e8e4354a1ffb221a218eee0/problem_check</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="event_problem_graded" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="event_type" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">problem_graded</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">event_type</stringProp>
                </elementProp>
                <elementProp name="event" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.value">input_i4x-edx-001-problem-da668d665e8e4354a1ffb221a218eee0_2_1=-I*pi**R%5E2*B_y&amp;input_i4x-edx-001-problem-da668d665e8e4354a1ffb221a218eee0_2_1_dynamath=%3Cmath+xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F1998%2FMath%2FMathML%22%3E%0D%0A++%3Cmstyle+displaystyle%3D%22true%22%3E%0D%0A++++%3Cmo%3E-%3C%2Fmo%3E%0D%0A++++%3Cmi%3EI%3C%2Fmi%3E%0D%0A++++%3Cmo%3E%26%23x22C5%3B%3C%2Fmo%3E%0D%0A++++%3Cmi%3E%26%23x3C0%3B%3C%2Fmi%3E%0D%0A++++%3Cmo%3E%26%23x22C6%3B%3C%2Fmo%3E%0D%0A++++%3Cmsup%3E%0D%0A++++++%3Cmi%3ER%3C%2Fmi%3E%0D%0A++++++%3Cmn%3E2%3C%2Fmn%3E%0D%0A++++%3C%2Fmsup%3E%0D%0A++++%3Cmo%3E%26%23x22C5%3B%3C%2Fmo%3E%0D%0A++++%3Cmsub%3E%0D%0A++++++%3Cmi%3EB%3C%2Fmi%3E%0D%0A++++++%3Cmi%3Ey%3C%2Fmi%3E%0D%0A++++%3C%2Fmsub%3E%0D%0A++%3C%2Fmstyle%3E%0D%0A%3C%2Fmath%3E&amp;input_i4x-edx-001-problem-da668d665e8e4354a1ffb221a218eee0_3_1=I*pi**R%5E2*B_x&amp;input_i4x-edx-001-problem-da668d665e8e4354a1ffb221a218eee0_3_1_dynamath=%3Cmath+xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F1998%2FMath%2FMathML%22%3E%0D%0A++%3Cmstyle+displaystyle%3D%22true%22%3E%0D%0A++++%3Cmi%3EI%3C%2Fmi%3E%0D%0A++++%3Cmo%3E%26%23x22C5%3B%3C%2Fmo%3E%0D%0A++++%3Cmi%3E%26%23x3C0%3B%3C%2Fmi%3E%0D%0A++++%3Cmo%3E%26%23x22C6%3B%3C%2Fmo%3E%0D%0A++++%3Cmsup%3E%0D%0A++++++%3Cmi%3ER%3C%2Fmi%3E%0D%0A++++++%3Cmn%3E2%3C%2Fmn%3E%0D%0A++++%3C%2Fmsup%3E%0D%0A++++%3Cmo%3E%26%23x22C5%3B%3C%2Fmo%3E%0D%0A++++%3Cmsub%3E%0D%0A++++++%3Cmi%3EB%3C%2Fmi%3E%0D%0A++++++%3Cmi%3Ex%3C%2Fmi%3E%0D%0A++++%3C%2Fmsub%3E%0D%0A++%3C%2Fmstyle%3E%0D%0A%3C%2Fmath%3E&quot;,&quot;\n&lt;h2 class=\&quot;problem-header\&quot;&gt;\n  Wire Ring\n&lt;/h2&gt;\n\n&lt;section class=\&quot;problem\&quot;&gt;\n  &lt;div&gt;&lt;span&gt;&lt;p&gt;\nA wire ring lying in the &lt;i class=\&quot;itshape\&quot;&gt;xy&lt;/i&gt;-plane with its center at the origin carries a counterclockwise current &lt;i class=\&quot;itshape\&quot;&gt;I&lt;/i&gt;. The radius of the loop is [mathjaxinline]R[/mathjaxinline]. There is an external uniform magnetic field [mathjaxinline]\\vec B=B_{x}\\hat x+ B_{y} \\hat{y}[/mathjaxinline] such that [mathjaxinline]B_{y} &amp;gt;0[/mathjaxinline] and [mathjaxinline]B_{x} &amp;lt;0[/mathjaxinline] .The magnetic moment vector [mathjaxinline]\\vec{\\mu }[/mathjaxinline] is perpendicular to the plane of the loop and has magnitude [mathjaxinline]\\mu =IA[/mathjaxinline] and the direction is given by right-hand-rule with respect to the direction of the current. &lt;/p&gt;&lt;p&gt;\nWhat is the [mathjaxinline]x[/mathjaxinline] component of the torque [mathjaxinline]\\vec{\\tau }[/mathjaxinline] on the loop? Express your answer using the following variables, if necessary, [mathjaxinline]B_ x[/mathjaxinline],[mathjaxinline]B_ y[/mathjaxinline],[mathjaxinline]I[/mathjaxinline],[mathjaxinline]R[/mathjaxinline], and natural constants. &lt;span&gt;&lt;section id=\&quot;inputtype_i4x-edx-001-problem-da668d665e8e4354a1ffb221a218eee0_2_1\&quot; class=\&quot;text-input-dynamath capa_inputtype \&quot;&gt;&lt;div class=\&quot;correct \&quot; id=\&quot;status_i4x-edx-001-problem-da668d665e8e4354a1ffb221a218eee0_2_1\&quot;&gt;&lt;input type=\&quot;text\&quot; name=\&quot;input_i4x-edx-001-problem-da668d665e8e4354a1ffb221a218eee0_2_1\&quot; id=\&quot;input_i4x-edx-001-problem-da668d665e8e4354a1ffb221a218eee0_2_1\&quot; aria-describedby=\&quot;answer_i4x-edx-001-problem-da668d665e8e4354a1ffb221a218eee0_2_1\&quot; value=\&quot;-I*pi**R^2*B_y\&quot; class=\&quot;math\&quot;/&gt;&lt;p class=\&quot;status\&quot; aria-describedby=\&quot;input_i4x-edx-001-problem-da668d665e8e4354a1ffb221a218eee0_2_1\&quot;&gt;\n        correct\n      &lt;/p&gt;&lt;p id=\&quot;answer_i4x-edx-001-problem-da668d665e8e4354a1ffb221a218eee0_2_1\&quot; class=\&quot;answer\&quot;/&gt;&lt;div id=\&quot;display_i4x-edx-001-problem-da668d665e8e4354a1ffb221a218eee0_2_1\&quot; class=\&quot;equation\&quot;&gt;`{::}`&lt;/div&gt;&lt;textarea style=\&quot;display:none\&quot; id=\&quot;input_i4x-edx-001-problem-da668d665e8e4354a1ffb221a218eee0_2_1_dynamath\&quot; name=\&quot;input_i4x-edx-001-problem-da668d665e8e4354a1ffb221a218eee0_2_1_dynamath\&quot;&gt;\n      &lt;/textarea&gt;&lt;/div&gt;&lt;span class=\&quot;message\&quot;&gt;&lt;p&gt;You entered: [mathjax]- \\pi^{R^{2}} B_{y} I[/mathjax]&lt;br/&gt;&lt;/p&gt;&lt;/span&gt;&lt;/section&gt;&lt;/span&gt; &lt;/p&gt;&lt;p&gt;\nWhat is the [mathjaxinline]y[/mathjaxinline] component of the torque [mathjaxinline]\\vec{\\tau }[/mathjaxinline] on the loop? Express your answer using the following variables, if necessary, [mathjaxinline]B_ x[/mathjaxinline],[mathjaxinline]B_ y[/mathjaxinline],[mathjaxinline]I[/mathjaxinline],[mathjaxinline]R[/mathjaxinline], and natural constants. &lt;span&gt;&lt;section id=\&quot;inputtype_i4x-edx-001-problem-da668d665e8e4354a1ffb221a218eee0_3_1\&quot; class=\&quot;text-input-dynamath capa_inputtype \&quot;&gt;&lt;div class=\&quot;correct \&quot; id=\&quot;status_i4x-edx-001-problem-da668d665e8e4354a1ffb221a218eee0_3_1\&quot;&gt;&lt;input type=\&quot;text\&quot; name=\&quot;input_i4x-edx-001-problem-da668d665e8e4354a1ffb221a218eee0_3_1\&quot; id=\&quot;input_i4x-edx-001-problem-da668d665e8e4354a1ffb221a218eee0_3_1\&quot; aria-describedby=\&quot;answer_i4x-edx-001-problem-da668d665e8e4354a1ffb221a218eee0_3_1\&quot; value=\&quot;I*pi**R^2*B_x\&quot; class=\&quot;math\&quot;/&gt;&lt;p class=\&quot;status\&quot; aria-describedby=\&quot;input_i4x-edx-001-problem-da668d665e8e4354a1ffb221a218eee0_3_1\&quot;&gt;\n        correct\n      &lt;/p&gt;&lt;p id=\&quot;answer_i4x-edx-001-problem-da668d665e8e4354a1ffb221a218eee0_3_1\&quot; class=\&quot;answer\&quot;/&gt;&lt;div id=\&quot;display_i4x-edx-001-problem-da668d665e8e4354a1ffb221a218eee0_3_1\&quot; class=\&quot;equation\&quot;&gt;`{::}`&lt;/div&gt;&lt;textarea style=\&quot;display:none\&quot; id=\&quot;input_i4x-edx-001-problem-da668d665e8e4354a1ffb221a218eee0_3_1_dynamath\&quot; name=\&quot;input_i4x-edx-001-problem-da668d665e8e4354a1ffb221a218eee0_3_1_dynamath\&quot;&gt;\n      &lt;/textarea&gt;&lt;/div&gt;&lt;span class=\&quot;message\&quot;&gt;&lt;p&gt;You entered: [mathjax]\\pi^{R^{2}} B_{x} I[/mathjax]&lt;br/&gt;&lt;/p&gt;&lt;/span&gt;&lt;/section&gt;&lt;/span&gt; &lt;/p&gt;&lt;p&gt;&lt;section class=\&quot;solution-span\&quot;&gt;&lt;span id=\&quot;solution_i4x-edx-001-problem-da668d665e8e4354a1ffb221a218eee0_solution_1\&quot;/&gt;&lt;/section&gt;&lt;/p&gt;&lt;/span&gt;&lt;/div&gt;\n\n  &lt;section class=\&quot;action\&quot;&gt;\n    &lt;input type=\&quot;hidden\&quot; name=\&quot;problem_id\&quot; value=\&quot;Wire Ring\&quot; /&gt;\n\n    &lt;input class=\&quot;reset\&quot; type=\&quot;button\&quot; value=\&quot;Reset\&quot; /&gt;\n    &lt;button class=\&quot;show\&quot;&gt;&lt;span class=\&quot;show-label\&quot;&gt;Show Answer(s)&lt;/span&gt; &lt;span class=\&quot;sr\&quot;&gt;(for question(s) above - adjacent to each field)&lt;/span&gt;&lt;/button&gt;\n  &lt;/section&gt;\n&lt;/section&gt;\n</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">event</stringProp>
                </elementProp>
                <elementProp name="page" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.value">${URL}/courses/edx/001/Manual_Test_Course/courseware/ca74c64d167c4926b9bb31eab4db430c/7a156bc950f24a029c43a933e7fb886a/</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">page</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${SERVER}</stringProp>
            <stringProp name="HTTPSampler.port">8000</stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/event</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="event_reset" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="event_type" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">problem_reset</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">event_type</stringProp>
                </elementProp>
                <elementProp name="event" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">input_i4x-edx-001-problem-da668d665e8e4354a1ffb221a218eee0_2_1=-I*pi**R%5E2*B_y&amp;input_i4x-edx-001-problem-da668d665e8e4354a1ffb221a218eee0_2_1_dynamath=%3Cmath+xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F1998%2FMath%2FMathML%22%3E%0D%0A++%3Cmstyle+displaystyle%3D%22true%22%3E%0D%0A++++%3Cmo%3E-%3C%2Fmo%3E%0D%0A++++%3Cmi%3EI%3C%2Fmi%3E%0D%0A++++%3Cmo%3E%26%23x22C5%3B%3C%2Fmo%3E%0D%0A++++%3Cmi%3E%26%23x3C0%3B%3C%2Fmi%3E%0D%0A++++%3Cmo%3E%26%23x22C6%3B%3C%2Fmo%3E%0D%0A++++%3Cmsup%3E%0D%0A++++++%3Cmi%3ER%3C%2Fmi%3E%0D%0A++++++%3Cmn%3E2%3C%2Fmn%3E%0D%0A++++%3C%2Fmsup%3E%0D%0A++++%3Cmo%3E%26%23x22C5%3B%3C%2Fmo%3E%0D%0A++++%3Cmsub%3E%0D%0A++++++%3Cmi%3EB%3C%2Fmi%3E%0D%0A++++++%3Cmi%3Ey%3C%2Fmi%3E%0D%0A++++%3C%2Fmsub%3E%0D%0A++%3C%2Fmstyle%3E%0D%0A%3C%2Fmath%3E&amp;input_i4x-edx-001-problem-da668d665e8e4354a1ffb221a218eee0_3_1=I*pi**R%5E2*B_x&amp;input_i4x-edx-001-problem-da668d665e8e4354a1ffb221a218eee0_3_1_dynamath=%3Cmath+xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F1998%2FMath%2FMathML%22%3E%0D%0A++%3Cmstyle+displaystyle%3D%22true%22%3E%0D%0A++++%3Cmi%3EI%3C%2Fmi%3E%0D%0A++++%3Cmo%3E%26%23x22C5%3B%3C%2Fmo%3E%0D%0A++++%3Cmi%3E%26%23x3C0%3B%3C%2Fmi%3E%0D%0A++++%3Cmo%3E%26%23x22C6%3B%3C%2Fmo%3E%0D%0A++++%3Cmsup%3E%0D%0A++++++%3Cmi%3ER%3C%2Fmi%3E%0D%0A++++++%3Cmn%3E2%3C%2Fmn%3E%0D%0A++++%3C%2Fmsup%3E%0D%0A++++%3Cmo%3E%26%23x22C5%3B%3C%2Fmo%3E%0D%0A++++%3Cmsub%3E%0D%0A++++++%3Cmi%3EB%3C%2Fmi%3E%0D%0A++++++%3Cmi%3Ex%3C%2Fmi%3E%0D%0A++++%3C%2Fmsub%3E%0D%0A++%3C%2Fmstyle%3E%0D%0A%3C%2Fmath%3E</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">event</stringProp>
                </elementProp>
                <elementProp name="page" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${URL}courses/edx/001/Manual_Test_Course/courseware/ca74c64d167c4926b9bb31eab4db430c/7a156bc950f24a029c43a933e7fb886a/</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">page</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${SERVER}</stringProp>
            <stringProp name="HTTPSampler.port">8000</stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/event</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="problem_reset" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="id" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">i4x://edx/001/problem/da668d665e8e4354a1ffb221a218eee0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">id</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${SERVER}</stringProp>
            <stringProp name="HTTPSampler.port">8000</stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/courses/edx/001/Manual_Test_Course/modx/i4x://edx/001/problem/da668d665e8e4354a1ffb221a218eee0/problem_reset</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
        </hashTree>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="custom_randomized" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <intProp name="LoopController.loops">-1</intProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <longProp name="ThreadGroup.start_time">1374077103000</longProp>
        <longProp name="ThreadGroup.end_time">1374077103000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <CookieManager guiclass="CookiePanel" testclass="CookieManager" testname="HTTP Cookie Manager" enabled="true">
          <collectionProp name="CookieManager.cookies"/>
          <boolProp name="CookieManager.clearEachIteration">false</boolProp>
        </CookieManager>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Auth" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${SERVER}</stringProp>
          <stringProp name="HTTPSampler.port">8000</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/auto_auth</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="change_enrollment_subscribe" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="course_id" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">edx/001/Manual_Test_Course</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">course_id</stringProp>
              </elementProp>
              <elementProp name="enrollment_action" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">enroll</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">enrollment_action</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${SERVER}</stringProp>
          <stringProp name="HTTPSampler.port">8000</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/change_enrollment</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree/>
        <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">true</boolProp>
          <intProp name="LoopController.loops">-1</intProp>
        </LoopController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="event_problem_check" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="event_type" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">problem_check</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">event_type</stringProp>
                </elementProp>
                <elementProp name="event" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.value">input_i4x-edx-001-problem-50d67ebe768f4ad4a50a30d6f68bf341_2_1=13&amp;input_i4x-edx-001-problem-50d67ebe768f4ad4a50a30d6f68bf341_2_2=56</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">event</stringProp>
                </elementProp>
                <elementProp name="page" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.value">${URL}/courses/edx/001/Manual_Test_Course/courseware/59a52063c3584ef790f5a4d044ef14f6/9b2b1aac746742ea8cceaa5086ef7049/</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">page</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${SERVER}</stringProp>
            <stringProp name="HTTPSampler.port">8000</stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/event</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="custom_randomized" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="input_i4x-edx-001-problem-50d67ebe768f4ad4a50a30d6f68bf341_2_1" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">40</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">input_i4x-edx-001-problem-50d67ebe768f4ad4a50a30d6f68bf341_2_1</stringProp>
                </elementProp>
                <elementProp name="input_i4x-edx-001-problem-50d67ebe768f4ad4a50a30d6f68bf341_2_2" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">5</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">input_i4x-edx-001-problem-50d67ebe768f4ad4a50a30d6f68bf341_2_2</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${SERVER}</stringProp>
            <stringProp name="HTTPSampler.port">8000</stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/courses/edx/001/Manual_Test_Course/modx/i4x://edx/001/problem/50d67ebe768f4ad4a50a30d6f68bf341/problem_check</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="event_problem_graded" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="event_type" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">problem_graded</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">event_type</stringProp>
                </elementProp>
                <elementProp name="event" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.value">input_i4x-edx-001-problem-50d67ebe768f4ad4a50a30d6f68bf341_2_1=13&amp;input_i4x-edx-001-problem-50d67ebe768f4ad4a50a30d6f68bf341_2_2=56&quot;,&quot;\n&lt;h2 class=\&quot;problem-header\&quot;&gt;\n  Adding\n&lt;/h2&gt;\n\n&lt;section class=\&quot;problem\&quot;&gt;\n  &lt;div&gt;&lt;p&gt;\nEnter two integers that add to 69.\n&lt;/p&gt;&lt;span&gt;&lt;section id=\&quot;inputtype_i4x-edx-001-problem-50d67ebe768f4ad4a50a30d6f68bf341_2_1\&quot; class=\&quot; capa_inputtype \&quot;&gt;&lt;div class=\&quot;correct \&quot; id=\&quot;status_i4x-edx-001-problem-50d67ebe768f4ad4a50a30d6f68bf341_2_1\&quot;&gt;&lt;input type=\&quot;text\&quot; name=\&quot;input_i4x-edx-001-problem-50d67ebe768f4ad4a50a30d6f68bf341_2_1\&quot; id=\&quot;input_i4x-edx-001-problem-50d67ebe768f4ad4a50a30d6f68bf341_2_1\&quot; aria-describedby=\&quot;answer_i4x-edx-001-problem-50d67ebe768f4ad4a50a30d6f68bf341_2_1\&quot; value=\&quot;13\&quot; size=\&quot;40\&quot;/&gt;&lt;p class=\&quot;status\&quot; aria-describedby=\&quot;input_i4x-edx-001-problem-50d67ebe768f4ad4a50a30d6f68bf341_2_1\&quot;&gt;\n        correct\n      &lt;/p&gt;&lt;p id=\&quot;answer_i4x-edx-001-problem-50d67ebe768f4ad4a50a30d6f68bf341_2_1\&quot; class=\&quot;answer\&quot;/&gt;&lt;/div&gt;&lt;/section&gt;&lt;br/&gt;&lt;section id=\&quot;inputtype_i4x-edx-001-problem-50d67ebe768f4ad4a50a30d6f68bf341_2_2\&quot; class=\&quot; capa_inputtype \&quot;&gt;&lt;div class=\&quot;correct \&quot; id=\&quot;status_i4x-edx-001-problem-50d67ebe768f4ad4a50a30d6f68bf341_2_2\&quot;&gt;&lt;input type=\&quot;text\&quot; name=\&quot;input_i4x-edx-001-problem-50d67ebe768f4ad4a50a30d6f68bf341_2_2\&quot; id=\&quot;input_i4x-edx-001-problem-50d67ebe768f4ad4a50a30d6f68bf341_2_2\&quot; aria-describedby=\&quot;answer_i4x-edx-001-problem-50d67ebe768f4ad4a50a30d6f68bf341_2_2\&quot; value=\&quot;56\&quot; size=\&quot;40\&quot;/&gt;&lt;p class=\&quot;status\&quot; aria-describedby=\&quot;input_i4x-edx-001-problem-50d67ebe768f4ad4a50a30d6f68bf341_2_2\&quot;&gt;\n        correct\n      &lt;/p&gt;&lt;p id=\&quot;answer_i4x-edx-001-problem-50d67ebe768f4ad4a50a30d6f68bf341_2_2\&quot; class=\&quot;answer\&quot;/&gt;&lt;/div&gt;&lt;/section&gt;&lt;/span&gt;&lt;/div&gt;\n\n  &lt;section class=\&quot;action\&quot;&gt;\n    &lt;input type=\&quot;hidden\&quot; name=\&quot;problem_id\&quot; value=\&quot;Adding\&quot; /&gt;\n\n    &lt;input class=\&quot;reset\&quot; type=\&quot;button\&quot; value=\&quot;Reset\&quot; /&gt;\n  &lt;/section&gt;\n&lt;/section&gt;\n</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">event</stringProp>
                </elementProp>
                <elementProp name="page" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.value">${URL}/courses/edx/001/Manual_Test_Course/courseware/59a52063c3584ef790f5a4d044ef14f6/9b2b1aac746742ea8cceaa5086ef7049/ Response Headersview source </stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">page</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${SERVER}</stringProp>
            <stringProp name="HTTPSampler.port">8000</stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/event</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="event_reset" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="event_type" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">problem_reset</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">event_type</stringProp>
                </elementProp>
                <elementProp name="event" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">input_i4x-edx-001-problem-50d67ebe768f4ad4a50a30d6f68bf341_2_1=40&amp;input_i4x-edx-001-problem-50d67ebe768f4ad4a50a30d6f68bf341_2_2=5</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">event</stringProp>
                </elementProp>
                <elementProp name="page" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${URL}/courses/edx/001/Manual_Test_Course/courseware/59a52063c3584ef790f5a4d044ef14f6/9b2b1aac746742ea8cceaa5086ef7049/</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">page</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${SERVER}</stringProp>
            <stringProp name="HTTPSampler.port">8000</stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/event</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="problem_reset" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="id" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">i4x://edx/001/problem/50d67ebe768f4ad4a50a30d6f68bf341</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">id</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${SERVER}</stringProp>
            <stringProp name="HTTPSampler.port">8000</stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/courses/edx/001/Manual_Test_Course/modx/i4x://edx/001/problem/50d67ebe768f4ad4a50a30d6f68bf341/problem_reset</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
        </hashTree>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="problem_get" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">4</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <longProp name="ThreadGroup.start_time">1374089891000</longProp>
        <longProp name="ThreadGroup.end_time">1374089891000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <CookieManager guiclass="CookiePanel" testclass="CookieManager" testname="HTTP Cookie Manager" enabled="true">
          <collectionProp name="CookieManager.cookies"/>
          <boolProp name="CookieManager.clearEachIteration">false</boolProp>
        </CookieManager>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Auth" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${SERVER}</stringProp>
          <stringProp name="HTTPSampler.port">8000</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/auto_auth</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="change_enrollment_subscribe" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="course_id" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">edx/001/Manual_Test_Course</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">course_id</stringProp>
              </elementProp>
              <elementProp name="enrollment_action" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">enroll</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">enrollment_action</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${SERVER}</stringProp>
          <stringProp name="HTTPSampler.port">8000</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/change_enrollment</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree/>
        <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">true</boolProp>
          <intProp name="LoopController.loops">-1</intProp>
        </LoopController>
        <hashTree>
          <RandomController guiclass="RandomControlGui" testclass="RandomController" testname="Random Controller" enabled="true">
            <intProp name="InterleaveControl.style">1</intProp>
          </RandomController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="problem_get_random" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${SERVER}</stringProp>
              <stringProp name="HTTPSampler.port">8000</stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/courses/edx/001/Manual_Test_Course/modx/i4x://edx/001/problem/50d67ebe768f4ad4a50a30d6f68bf341/problem_get</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="problem_get_multiple_choice" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${SERVER}</stringProp>
              <stringProp name="HTTPSampler.port">8000</stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/courses/edx/001/Manual_Test_Course/modx/i4x://edx/001/problem/5ba39d15309f4e29a51e7c2e765defbc/problem_get</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="problem_get_limited" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${SERVER}</stringProp>
              <stringProp name="HTTPSampler.port">8000</stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/courses/edx/001/Manual_Test_Course/modx/i4x://edx/001/problem/c35654f5b6104696bd69446bc4746e3e/problem_get</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="problem_get_string" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${SERVER}</stringProp>
              <stringProp name="HTTPSampler.port">8000</stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/courses/edx/001/Manual_Test_Course/modx/i4x://edx/001/problem/0302c6f2497d4a4189d42eafe9494873/problem_get</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
          </hashTree>
        </hashTree>
      </hashTree>
      <ResultCollector guiclass="SummaryReport" testclass="ResultCollector" testname="Summary Report" enabled="true">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>true</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>false</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
          </value>
        </objProp>
        <stringProp name="filename"></stringProp>
      </ResultCollector>
      <hashTree/>
    </hashTree>
  </hashTree>
</jmeterTestPlan>
